apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "newsies-trainer.fullname" . }}
  labels:
    {{- include "newsies-trainer.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "newsies-trainer.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
        {{- include "newsies-trainer.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "newsies-trainer.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8003
              protocol: TCP
          env:
            - name: REDIS_CREDS
              valueFrom:
                secretKeyRef:
                  name: {{ include "newsies-trainer.fullname" . }}-secret
                  key: redis-creds
            - name: CHROMADB_HOST
              value: "{{ .Values.chromadb.host }}"
            - name: CHROMADB_PORT
              value: "{{ .Values.chromadb.port }}"
            - name: CHROMADB_CREDS
              valueFrom:
                secretKeyRef:
                  name: {{ include "newsies-trainer.fullname" . }}-secret
                  key: chromadb-creds
            - name: PIPELINE_TYPE
              value: "trainer"
            - name: CUDA_VISIBLE_DEVICES
              value: "0"
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 60
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: models-storage
              mountPath: /app/merged_models
            - name: lora-storage
              mountPath: /app/lora_adapters
            - name: training-data
              mountPath: /app/training_data
            - name: config
              mountPath: /app/config
              readOnly: true
      volumes:
        - name: models-storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.models.existingClaim | default (printf "%s-models" (include "newsies-trainer.fullname" .)) }}
        - name: lora-storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.lora.existingClaim | default (printf "%s-lora" (include "newsies-trainer.fullname" .)) }}
        - name: training-data
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.training.existingClaim | default (printf "%s-training" (include "newsies-trainer.fullname" .)) }}
        - name: config
          configMap:
            name: {{ include "newsies-trainer.fullname" . }}-config
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
