replicaCount: 1

image:
  repository: redis
  pullPolicy: IfNotPresent
  tag: "7.0"

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 6379

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Redis specific configuration
redis:
  # Authentication settings matching Docker Compose
  auth:
    enabled: true
    username: "user2"
    password: "redisCache123#"
  
  # Redis configuration matching Docker Compose
  config:
    save: "60 1"  # Save every 60 seconds if at least 1 key changed
    loglevel: "warning"
  
  # Persistence configuration - using existing volume mount points
  persistence:
    enabled: true
    storageClass: ""
    accessMode: ReadWriteOnce
    size: 8Gi
    # Mount path matching Docker Compose: /data
    mountPath: "/data"
    # Host path for local development (matching docker-compose volume)
    hostPath: "/home/mpeters/Projects/newsies/docker/redis_data"
